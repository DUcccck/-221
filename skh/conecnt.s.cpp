#include <boost/asio.hpp> // Підключення необхідної бібліотеки Boost.Asio для роботи з мережевими операціями

int main() {
    std::uint16_t port = 15001; // Визначення номеру порту, на якому буде працювати сервер

    boost::asio::io_context io_context; // Створення об'єкту, що представляє собою контекст вводу/виводу для асинхронних операцій вводу/виводу

    // Створення об'єкта, який представляє собою кінцеву точку UDP-приймача для прийому повідомлень на вказаному порті
    boost::asio::ip::udp::endpoint receiver(boost::asio::ip::udp::v4(), port);

    // Створення UDP-гнізда для прийому і відправки даних на вказаній кінцевій точці
    boost::asio::ip::udp::socket socket(io_context, receiver);

    while (true) { // Безкінечний цикл для безперервного прийому та відправки даних
        char buffer[65536]; // Створення буфера для зберігання отриманих даних
        boost::asio::ip::udp::endpoint sender; // Створення об'єкту, що зберігає інформацію про відправника даних

        // Очікування на отримання даних від клієнта і зберігання їх у буфері, а також інформації про відправника
        std::size_t bytes_transferred = socket.receive_from(boost::asio::buffer(buffer), sender);

        // Відправлення отриманих даних назад тому самому клієнту, використовуючи адресу відправника
        socket.send_to(boost::asio::buffer(buffer, bytes_transferred), sender);
    }

    return 0; 
}
